<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="class">
        <name>QAbstractProtobufSerializer</name>
        <filename>qabstractprotobufserializer.html</filename>
        <member kind="enumeration">
            <name>DeserializationError</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>DeserializationError-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NoError</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>DeserializationError-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>InvalidHeaderError</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>DeserializationError-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NoDeserializerError</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>DeserializationError-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>UnexpectedEndOfStreamError</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>DeserializationError-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>Q_DECLARE_PROTOBUF_SERIALIZERS</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>Q_DECLARE_PROTOBUF_SERIALIZERS</anchor>
            <arglist>(Type)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>Q_PROTOBUF_OBJECT</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>Q_PROTOBUF_OBJECT</anchor>
            <arglist>Q_PROTOBUF_OBJECT</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QAbstractProtobufSerializer</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>dtor.QAbstractProtobufSerializer</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QByteArray</type>
            <name>serialize</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>serialize</anchor>
            <arglist>(const QProtobufMessage *message) const const</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="pure" static="no">
            <type>virtual QByteArray</type>
            <name>serializeMessage</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>serializeMessage</anchor>
            <arglist>(const QProtobufMessage *message, const QtProtobufPrivate::QProtobufPropertyOrdering &amp;ordering) const const = 0</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>deserialize</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>deserialize</anchor>
            <arglist>(T *object, QByteArrayView data) const const</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="pure" static="no">
            <type>virtual bool</type>
            <name>deserializeMessage</name>
            <anchorfile>qabstractprotobufserializer.html</anchorfile>
            <anchor>deserializeMessage</anchor>
            <arglist>(QProtobufMessage *message, const QtProtobufPrivate::QProtobufPropertyOrdering &amp;ordering, QByteArrayView data) const const = 0</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QProtobufMessage</name>
        <filename>qprotobufmessage.html</filename>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QProtobufMessagePointer</type>
            <name>constructByName</name>
            <anchorfile>qprotobufmessage.html</anchorfile>
            <anchor>constructByName</anchor>
            <arglist>(const QString &amp;messageType)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>setProperty</name>
            <anchorfile>qprotobufmessage.html</anchorfile>
            <anchor>setProperty-1</anchor>
            <arglist>(QAnyStringView propertyName, QVariant &amp;&amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>setProperty</name>
            <anchorfile>qprotobufmessage.html</anchorfile>
            <anchor>setProperty</anchor>
            <arglist>(QAnyStringView propertyName, const QVariant &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVariant</type>
            <name>property</name>
            <anchorfile>qprotobufmessage.html</anchorfile>
            <anchor>property</anchor>
            <arglist>(QAnyStringView propertyName) const const</arglist>
        </member>
        <member kind="typedef" type="">
            <name>QProtobufMessagePointer</name>
            <anchorfile>qprotobufmessage.html</anchorfile>
            <anchor>QProtobufMessagePointer-typedef</anchor>
            <arglist></arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QProtobufMessageDeleter</name>
        <filename>qprotobufmessagedeleter.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>operator()</name>
            <anchorfile>qprotobufmessagedeleter.html</anchorfile>
            <anchor>operator-28-29</anchor>
            <arglist>()(QProtobufMessage *ptr)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QProtobufSerializer</name>
        <filename>qprotobufserializer.html</filename>
        <base>QAbstractProtobufSerializer</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QProtobufSerializer</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>QProtobufSerializer-2</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>qRegisterProtobufEnumType</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>qRegisterProtobufEnumType</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>qRegisterProtobufMapType</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>qRegisterProtobufMapType</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>qRegisterProtobufType</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>qRegisterProtobufType</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QProtobufSerializer</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>dtor.QProtobufSerializer</anchor>
            <arglist>() override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual QByteArray</type>
            <name>serializeMessage</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>serializeMessage</anchor>
            <arglist>(const QProtobufMessage *message, const QtProtobufPrivate::QProtobufPropertyOrdering &amp;ordering) const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual QProtobufSerializer::DeserializationError</type>
            <name>deserializationError</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>deserializationError</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual QString</type>
            <name>deserializationErrorString</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>deserializationErrorString</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>deserializeMessage</name>
            <anchorfile>qprotobufserializer.html</anchorfile>
            <anchor>deserializeMessage</anchor>
            <arglist>(QProtobufMessage *message, const QtProtobufPrivate::QProtobufPropertyOrdering &amp;ordering, QByteArrayView data) const const override</arglist>
        </member>
    </compound>
    <compound kind="namespace">
        <name>QtProtobuf</name>
        <filename>qtprotobuf.html</filename>
        <member kind="enumeration">
            <name>WireTypes</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>WireTypes-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>Unknown</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>WireTypes-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Varint</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>WireTypes-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Fixed64</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>WireTypes-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>LengthDelimited</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>WireTypes-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>StartGroup</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>WireTypes-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>EndGroup</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>WireTypes-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Fixed32</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>WireTypes-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>repeatedValueCompare</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>repeatedValueCompare-1</anchor>
            <arglist>(const QHash&lt;K, V&gt; &amp;a, const QHash&lt;K, V&gt; &amp;b)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>repeatedValueCompare</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>repeatedValueCompare</anchor>
            <arglist>(const QList&lt;T&gt; &amp;a, const QList&lt;T&gt; &amp;b)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>qRegisterProtobufQtCoreTypes</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>qRegisterProtobufQtCoreTypes</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>qRegisterProtobufQtGuiTypes</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>qRegisterProtobufQtGuiTypes</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>qRegisterProtobufTypes</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>qRegisterProtobufTypes</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="typedef" type="">
            <name>boolList</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>boolList-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>doubleList</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>doubleList-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>fixed32</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>fixed32-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>fixed32List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>fixed32List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>fixed64</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>fixed64-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>fixed64List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>fixed64List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>floatList</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>floatList-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>int32</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>int32-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>int32List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>int32List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>int64</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>int64-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>int64List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>int64List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>sfixed32</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>sfixed32-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>sfixed32List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>sfixed32List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>sfixed64</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>sfixed64-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>sfixed64List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>sfixed64List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>sint32</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>sint32-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>sint32List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>sint32List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>sint64</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>sint64-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>sint64List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>sint64List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>uint32</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>uint32-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>uint32List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>uint32List-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>uint64</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>uint64-typedef</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="">
            <name>uint64List</name>
            <anchorfile>qtprotobuf.html</anchorfile>
            <anchor>uint64List-typedef</anchor>
            <arglist></arglist>
        </member>
    </compound>
</tagfile>
