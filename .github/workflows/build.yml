name: build

on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  # Allows for the workflow to be manually started through the GitHub UI
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Contexts and Secrets
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "[Secrets]"
          echo "secrets.GITHUB_TOKEN = ${{ secrets.GITHUB_TOKEN }}"
          echo "secrets.CROWDIN_PERSONAL_TOKEN = ${{ secrets.CROWDIN_PERSONAL_TOKEN }}"
          echo "secrets.APP_ID = ${{ secrets.APP_ID }}"
          echo "secrets.APP_PRIVATE_KEY = ${{ secrets.APP_PRIVATE_KEY }}"

      - name: Checkout to '${{ github.ref }}'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      # https://wiki.qt.io/Building_Qt_6_from_Git
      - name: Install the Prerequisites
        run: |
          sudo apt update
          sudo apt install \
            cmake \
            python3 \
            python3-pip \
            ninja-build \
            nodejs \
            bison \
            flex \
            perl \
            gperf \
            libclang-dev \
            libgl-dev \
            libegl-dev \
            libfontconfig1-dev \
            libinput-dev
          pip install html5lib

      - name: Prepare Qt6 Sources
        run: |
          curl -L https://download.qt.io/archive/qt/6.6/6.6.2/single/qt-everywhere-src-6.6.2.tar.xz -o qt-everywhere-src-6.6.2.tar.xz
          tar -xf qt-everywhere-src-6.6.2.tar.xz

      - name: Build Qt6 Documentation
        run: |
          echo "pwd: $(pwd)"
          cd qt-everywhere-src-6.6.2
          echo "pwd: $(pwd)"
          mkdir build-qt && cd build-qt
          echo "pwd: $(pwd)"
          ../configure -developer-build
          cmake --build . --target docs

      # - name: Deploy to 'gh-pages' branch
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: gh-pages
      #     folder: ./linux/Documentation/output
      #     target-folder: .
      #     clean: false