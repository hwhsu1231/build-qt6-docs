<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="namespace">
        <name>QQmlSA</name>
        <filename>qqmlsa.html</filename>
        <class>QQmlSA::Binding</class>
        <class>QQmlSA::Element</class>
        <class>QQmlSA::ElementPass</class>
        <class>QQmlSA::FixSuggestion</class>
        <class>QQmlSA::GenericPass</class>
        <class>QQmlSA::LintPlugin</class>
        <class>QQmlSA::LoggerWarningId</class>
        <class>QQmlSA::Method</class>
        <class>QQmlSA::PassManager</class>
        <class>QQmlSA::Property</class>
        <class>QQmlSA::PropertyPass</class>
        <class>QQmlSA::SourceLocation</class>
    </compound>
    <compound kind="class">
        <name>QQmlSA::Binding</name>
        <filename>qqmlsa-binding.html</filename>
        <class>QQmlSA::Binding::Bindings</class>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>bool</type>
            <name>isLiteralBinding</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>isLiteralBinding</anchor>
            <arglist>(QQmlSA::BindingType bindingType)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>attachingType</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>attachingType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>groupType</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>groupType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>objectType</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>objectType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::ScriptBindingKind</type>
            <name>scriptKind</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>scriptKind</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::SourceLocation</type>
            <name>sourceLocation</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>sourceLocation</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>propertyName</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>propertyName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>stringValue</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>stringValue</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasObject</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>hasObject</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>double</type>
            <name>numberValue</name>
            <anchorfile>qqmlsa-binding.html</anchorfile>
            <anchor>numberValue</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::Binding::Bindings</name>
        <filename>qqmlsa-binding-bindings.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMultiHash&lt;QString, Binding&gt;::const_iterator</type>
            <name>constBegin</name>
            <anchorfile>qqmlsa-binding-bindings.html</anchorfile>
            <anchor>constBegin</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMultiHash&lt;QString, Binding&gt;::const_iterator</type>
            <name>constEnd</name>
            <anchorfile>qqmlsa-binding-bindings.html</anchorfile>
            <anchor>constEnd</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::Element</name>
        <filename>qqmlsa-element.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Binding::Bindings</type>
            <name>ownPropertyBindings</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>ownPropertyBindings</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Binding::Bindings</type>
            <name>ownPropertyBindings</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>ownPropertyBindings-1</anchor>
            <arglist>(const QString &amp;propertyName) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Method::Methods</type>
            <name>ownMethods</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>ownMethods</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QQmlSA::Binding&gt;</type>
            <name>propertyBindings</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>propertyBindings</anchor>
            <arglist>(const QString &amp;propertyName) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlJS::ConstPtrWrapperIterator</type>
            <name>childScopesBegin</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>childScopesBegin</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlJS::ConstPtrWrapperIterator</type>
            <name>childScopesEnd</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>childScopesEnd</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::AccessSemantics</type>
            <name>accessSemantics</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>accessSemantics</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>baseType</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>baseType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>parentScope</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>parentScope</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Property</type>
            <name>property</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>property</anchor>
            <arglist>(const QString &amp;propertyName) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::ScopeType</type>
            <name>scopeType</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>scopeType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::SourceLocation</type>
            <name>sourceLocation</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>sourceLocation</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>baseTypeName</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>baseTypeName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>defaultPropertyName</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>defaultPropertyName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>filePath</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>filePath</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>name</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasMethod</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>hasMethod</anchor>
            <arglist>(const QString &amp;methodName) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasOwnPropertyBindings</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>hasOwnPropertyBindings</anchor>
            <arglist>(const QString &amp;propertyName) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasProperty</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>hasProperty</anchor>
            <arglist>(const QString &amp;propertyName) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasPropertyBindings</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>hasPropertyBindings</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>inherits</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>inherits</anchor>
            <arglist>(const QQmlSA::Element &amp;element) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isComposite</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>isComposite</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isPropertyRequired</name>
            <anchorfile>qqmlsa-element.html</anchorfile>
            <anchor>isPropertyRequired</anchor>
            <arglist>(const QString &amp;propertyName) const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::ElementPass</name>
        <filename>qqmlsa-elementpass.html</filename>
        <base>GenericPass</base>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>shouldRun</name>
            <anchorfile>qqmlsa-elementpass.html</anchorfile>
            <anchor>shouldRun</anchor>
            <arglist>(const QQmlSA::Element &amp;element)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="pure" static="no">
            <type>virtual void</type>
            <name>run</name>
            <anchorfile>qqmlsa-elementpass.html</anchorfile>
            <anchor>run</anchor>
            <arglist>(const QQmlSA::Element &amp;element) = 0</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::FixSuggestion</name>
        <filename>qqmlsa-fixsuggestion.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAutoApplicable</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>setAutoApplicable</anchor>
            <arglist>(bool autoApplicable)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFileName</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>setFileName</anchor>
            <arglist>(const QString &amp;fileName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHint</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>setHint</anchor>
            <arglist>(const QString &amp;hint)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::SourceLocation</type>
            <name>location</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>location</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>fileName</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>fileName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>fixDescription</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>fixDescription</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>hint</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>hint</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>replacement</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>replacement</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAutoApplicable</name>
            <anchorfile>qqmlsa-fixsuggestion.html</anchorfile>
            <anchor>isAutoApplicable</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::GenericPass</name>
        <filename>qqmlsa-genericpass.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>GenericPass</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>GenericPass-2</anchor>
            <arglist>(QQmlSA::PassManager *manager)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>resolveAttached</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>resolveAttached</anchor>
            <arglist>(QAnyStringView moduleName, QAnyStringView typeName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>resolveAttachedInFileScope</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>resolveAttachedInFileScope</anchor>
            <arglist>(QAnyStringView typeName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>resolveIdToElement</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>resolveIdToElement</anchor>
            <arglist>(QAnyStringView id, const QQmlSA::Element &amp;context)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>resolveLiteralType</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>resolveLiteralType</anchor>
            <arglist>(const QQmlSA::Binding &amp;binding)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>resolveType</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>resolveType</anchor>
            <arglist>(QAnyStringView moduleName, QAnyStringView typeName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>resolveTypeInFileScope</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>resolveTypeInFileScope</anchor>
            <arglist>(QAnyStringView typeName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>resolveElementToId</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>resolveElementToId</anchor>
            <arglist>(const QQmlSA::Element &amp;element, const QQmlSA::Element &amp;context)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>sourceCode</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>sourceCode</anchor>
            <arglist>(QQmlSA::SourceLocation location)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emitWarning</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>emitWarning</anchor>
            <arglist>(QAnyStringView diagnostic, QQmlSA::LoggerWarningId id)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emitWarning</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>emitWarning-1</anchor>
            <arglist>(QAnyStringView diagnostic, QQmlSA::LoggerWarningId id, QQmlSA::SourceLocation srcLocation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>emitWarning</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>emitWarning-2</anchor>
            <arglist>(QAnyStringView diagnostic, QQmlSA::LoggerWarningId id, QQmlSA::SourceLocation srcLocation, const QQmlSA::FixSuggestion &amp;fix)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::Element</type>
            <name>resolveBuiltinType</name>
            <anchorfile>qqmlsa-genericpass.html</anchorfile>
            <anchor>resolveBuiltinType</anchor>
            <arglist>(QAnyStringView typeName) const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::LintPlugin</name>
        <filename>qqmlsa-lintplugin.html</filename>
        <member kind="function" protection="public" virtualness="pure" static="no">
            <type>virtual void</type>
            <name>registerPasses</name>
            <anchorfile>qqmlsa-lintplugin.html</anchorfile>
            <anchor>registerPasses</anchor>
            <arglist>(QQmlSA::PassManager *manager, const QQmlSA::Element &amp;rootElement) = 0</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::LoggerWarningId</name>
        <filename>qqmlsa-loggerwarningid.html</filename>
    </compound>
    <compound kind="class">
        <name>QQmlSA::Method</name>
        <filename>qqmlsa-method.html</filename>
        <class>QQmlSA::Method::Methods</class>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::MethodType</type>
            <name>methodType</name>
            <anchorfile>qqmlsa-method.html</anchorfile>
            <anchor>methodType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>methodName</name>
            <anchorfile>qqmlsa-method.html</anchorfile>
            <anchor>methodName</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::Method::Methods</name>
        <filename>qqmlsa-method-methods.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMultiHash&lt;QString, Method&gt;::const_iterator</type>
            <name>constBegin</name>
            <anchorfile>qqmlsa-method-methods.html</anchorfile>
            <anchor>constBegin</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMultiHash&lt;QString, Method&gt;::const_iterator</type>
            <name>constEnd</name>
            <anchorfile>qqmlsa-method-methods.html</anchorfile>
            <anchor>constEnd</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::PassManager</name>
        <filename>qqmlsa-passmanager.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>PassManager</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>PassManager</anchor>
            <arglist>(QQmlJSImportVisitor *visitor, QQmlJSTypeResolver *resolver)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>registerPropertyPass</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>registerPropertyPass</anchor>
            <arglist>(std::shared_ptr&lt;PropertyPass&gt; pass, QAnyStringView moduleName, QAnyStringView typeName, QAnyStringView propertyName, bool allowInheritance)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>analyze</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>analyze</anchor>
            <arglist>(const QQmlSA::Element &amp;root)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>registerElementPass</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>registerElementPass</anchor>
            <arglist>(std::unique_ptr&lt;ElementPass&gt; pass)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasImportedModule</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>hasImportedModule</anchor>
            <arglist>(QAnyStringView module) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isCategoryEnabled</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>isCategoryEnabled</anchor>
            <arglist>(QQmlSA::LoggerWarningId category) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>std::multimap&lt;QString, PropertyPassInfo&gt;</type>
            <name>propertyPasses</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>propertyPasses</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>std::unordered_map&lt;quint32, BindingInfo&gt;</type>
            <name>bindingsByLocation</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>bindingsByLocation</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>std::vector&lt;std::shared_ptr&lt;ElementPass&gt;&gt;</type>
            <name>elementPasses</name>
            <anchorfile>qqmlsa-passmanager.html</anchorfile>
            <anchor>elementPasses</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::Property</name>
        <filename>qqmlsa-property.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>typeName</name>
            <anchorfile>qqmlsa-property.html</anchorfile>
            <anchor>typeName</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::PropertyPass</name>
        <filename>qqmlsa-propertypass.html</filename>
        <base>GenericPass</base>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>onBinding</name>
            <anchorfile>qqmlsa-propertypass.html</anchorfile>
            <anchor>onBinding</anchor>
            <arglist>(const QQmlSA::Element &amp;element, const QString &amp;propertyName, const QQmlSA::Binding &amp;binding, const QQmlSA::Element &amp;bindingScope, const QQmlSA::Element &amp;value)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>onRead</name>
            <anchorfile>qqmlsa-propertypass.html</anchorfile>
            <anchor>onRead</anchor>
            <arglist>(const QQmlSA::Element &amp;element, const QString &amp;propertyName, const QQmlSA::Element &amp;readScope, QQmlSA::SourceLocation location)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>onWrite</name>
            <anchorfile>qqmlsa-propertypass.html</anchorfile>
            <anchor>onWrite</anchor>
            <arglist>(const QQmlSA::Element &amp;element, const QString &amp;propertyName, const QQmlSA::Element &amp;expressionType, const QQmlSA::Element &amp;writeScope, QQmlSA::SourceLocation location)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQmlSA::SourceLocation</name>
        <filename>qqmlsa-sourcelocation.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::SourceLocation</type>
            <name>endZeroLengthLocation</name>
            <anchorfile>qqmlsa-sourcelocation.html</anchorfile>
            <anchor>endZeroLengthLocation</anchor>
            <arglist>(QStringView text) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlSA::SourceLocation</type>
            <name>startZeroLengthLocation</name>
            <anchorfile>qqmlsa-sourcelocation.html</anchorfile>
            <anchor>startZeroLengthLocation</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>begin</name>
            <anchorfile>qqmlsa-sourcelocation.html</anchorfile>
            <anchor>begin</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>end</name>
            <anchorfile>qqmlsa-sourcelocation.html</anchorfile>
            <anchor>end</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>length</name>
            <anchorfile>qqmlsa-sourcelocation.html</anchorfile>
            <anchor>length</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>offset</name>
            <anchorfile>qqmlsa-sourcelocation.html</anchorfile>
            <anchor>offset</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>startColumn</name>
            <anchorfile>qqmlsa-sourcelocation.html</anchorfile>
            <anchor>startColumn</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>startLine</name>
            <anchorfile>qqmlsa-sourcelocation.html</anchorfile>
            <anchor>startLine</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
</tagfile>
